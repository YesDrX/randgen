FloatPair	docs/distributions.html#FloatPair	distributions: FloatPair	
randGaussian	docs/distributions.html#randGaussian,float,float,bool	distributions: randGaussian(mu = 0.0; sigma = 1.0; return_pari: bool): FloatPair	
randGaussian	docs/distributions.html#randGaussian,float,float	distributions: randGaussian(mu = 0.0; sigma = 1.0): float	
randGaussianTrunc	docs/distributions.html#randGaussianTrunc,float,float,float	distributions: randGaussianTrunc(mu = 0.0; sigma = 1.0; lb = -2.0; ub = 2.0): float	
randGaussianTanh	docs/distributions.html#randGaussianTanh,float,float,float	distributions: randGaussianTanh(mu = 0.0; sigma = 1.0; lb = -2.0; ub = 2.0): float	
randExponential	docs/distributions.html#randExponential,float	distributions: randExponential(lambda = 1.0): float	
randLaplace	docs/distributions.html#randLaplace,float,float	distributions: randLaplace(mu = 0.0; b = 1.0): float	
randCauchy	docs/distributions.html#randCauchy,float,float	distributions: randCauchy(x0 = 0.0; gamma = 1.0): float	
randRayleigh	docs/distributions.html#randRayleigh,float	distributions: randRayleigh(sigma = 1.0): float	
randGamma	docs/distributions.html#randGamma,float,float	distributions: randGamma(k = 1.0; theta = 2.0): float	
randLogNormal	docs/distributions.html#randLogNormal,float,float	distributions: randLogNormal(mu = 0.0; sigma = 1.0): float	
randChi2	docs/distributions.html#randChi2,int	distributions: randChi2(df = 1): float	
randF	docs/distributions.html#randF,int,int	distributions: randF(df1 = 1; df2 = 1): float	
randStudent	docs/distributions.html#randStudent,int	distributions: randStudent(df = 1): float	
randBeta	docs/distributions.html#randBeta,float,float	distributions: randBeta(alpha = 0.5; beta = 0.5): float	
randLogistic	docs/distributions.html#randLogistic,float,float	distributions: randLogistic(mu = 5.0; s = 2.0): float	
randWeibull	docs/distributions.html#randWeibull,float,float	distributions: randWeibull(lambda = 1.0; k = 0.5): float	
randBinomial	docs/distributions.html#randBinomial,float,int	distributions: randBinomial(p = 0.5; n = 1): int	
randPoisson	docs/distributions.html#randPoisson,float	distributions: randPoisson(lambda = 1.0): int	
